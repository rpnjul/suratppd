<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Rincian extends CI_Controller{
    private $level;
    private $sesi;
    function __construct()
    {
        parent::__construct();
        $this->load->library('Loader');
        $this->load->model('M_daftarrincian');
        $this->load->model('M_detailrincian');
        $this->load->model('M_surattugas');
        $this->load->model('M_pegawai');
        $this->level = $this->session->userdata('level');
        $this->sesi = $this->session->has_userdata('status');
        if (!$this->sesi) {
            redirect('login','refresh');
        }
    } 

    public function cek_surattugas($nomor){
        $cek = $this->M_surattugas->search_surattugas($nomor);
      // $cek = $this->M_surattugas->get_surattugas_by_no($nomor);
       if(count($cek)<1)
       {
          $this->form_validation->set_message('cek_surattugas', 'Nomor tidak sesuai');
          return FALSE;
       } 
       return TRUE;
    }

    function get_autocomplete(){
        if (isset($_GET['term'])) {
            $result = $this->M_daftarrincian->search_rincian_by_surattugas($_GET['term']);
            if (count($result) > 0) {
                foreach ($result as $row)
                    // $arr_result[] = $row->srtgs_no;
                    $arr_result[] = array(
                        'label'         => $row->srtgs_no,
                        'description'   => ($row->rnd_binap * $row->rnd_jmlinap) + ($row->rnd_btrkt + $row->rnd_btrkt) + ($row->rnd_sku * $row->rnd_jmlsaku??1) + $row->rnd_btmbhn??0,
                );
                    echo json_encode($arr_result);
            }
        }
    }

    function ajax_select2(){
        if (isset($_GET['id'])) {
            $result = $this->M_daftarrincian->search_rincian_by_surattugas(htmlspecialchars_decode($_GET['id']));
            if (count($result) > 0) {
                foreach ($result as $row){
                    $price = ($row->rnd_binap * $row->rnd_jmlinap) + ($row->rnd_btrkt + $row->rnd_btrkt) + ($row->rnd_sku * $row->rnd_jmlsaku??1) + $row->rnd_btmbhn??0;
                    $data['results'][] = [
                        'id'    => $row->rcn_id,
                        'text'    => 'Pegawai : '.$row->pgw_nm.' | Total Pembayaran : '.$this->loader->rupiah($price),
                    ];
                }
                echo json_encode($data);
            }
        }else{
            echo json_encode(array('status'=>'failure'));
        }
    }



    /*
     * Listing of daftar_rincian
     */
    function index()
    {
        /*if (!$this->sesi) {
            redirect('login');
        }else{*/
            $params['limit'] = RECORDS_PER_PAGE; 
            $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
            
            $config = $this->config->item('pagination');
            $config['base_url'] = site_url('rincian/index?');
            $config['total_rows'] = $this->M_daftarrincian->get_all_daftar_rincian_count();
            $this->pagination->initialize($config);

            $data['daftar_rincian'] = $this->M_daftarrincian->get_all_daftar_rincian($params);
            $data['daftar_rincian'] = array_map(function($val){
                $val['detail'] = $this->M_detailrincian->get_daftar_rincian_by_rcn($val['rcn_id']);
                $val['total'] = ($val['detail']['rnd_binap'] * $val['detail']['rnd_jmlinap']) + ($val['detail']['rnd_btrkt'] + $val['detail']['rnd_btrkt']) + ($val['detail']['rnd_sku'] * $val['detail']['rnd_jmlsaku']??1) + $val['detail']['rnd_btmbhn']??0;
                return $val;
            },$data['daftar_rincian']);
            $data['judul']='Daftar Rincian';
            $data['_view'] = 'v_daftar_rincian/index';
            $data['_landing'] = false;
            $load = $this->loader->load($data);
            $this->load->view('layouts/content',$load);
    //    }
    }


    function rules(){
        $this->form_validation->set_message('max_length', '{field} tidak dapat lebih dari {param} karakter.');
        $this->form_validation->set_message('required', 'Memerlukan {field}.');
        $this->form_validation->set_message('is_unique', '{field} telah digunakan.');
    }

    /*
     * Adding a new daftar_rincian
     */
    function add()
    {   
        if ($this->session->userdata('level')!='Kepala Sub Bagian Umum' && $this->session->userdata('level')!='Direktur' && $this->session->userdata('level') != 'Admin') {
           redirect('rincian');
        }else{
            $this->load->library('form_validation');

            // $this->form_validation->set_rules('srtgs_no','Ref. Surat tugas','required|is_unique[tb_rcn.srtgs_no]|callback_cek_surattugas');
            // $this->form_validation->set_rules('rnd_binap','Biaya inap','required');
            // $this->form_validation->set_rules('rnd_jmlbinap','Hari inap','required');
            // $this->form_validation->set_rules('rnd_brkt','Biaya berangkat','required');
            // $this->form_validation->set_rules('rnd_bplg','Biaya pulang','required');
            $this->form_validation->set_rules('rnd_sku','Uang saku','required');
            $this->rules();
            $nip = $this->session->userdata('nip');
            //var_dump($nip);
            if($this->form_validation->run())     
            {   
                $params = array(
                    'srtgs_no' => $this->input->post('srtgs_no'),
                    'pgw_nip' => $nip,
                    'rcn_tgl' => date('Y-m-d')
                );
                
                $daftar_rincian_id = $this->M_daftarrincian->add_daftar_rincian($params);
               // echo($daftar_rincian_id);
                $param2 = array(
                    'rcn_id'        => $daftar_rincian_id,
                    'rnd_binap'     => intval(str_replace('.', '', ($this->input->post('rnd_binap')))),
                    'rnd_jmlinap'   => $this->input->post('rnd_jmlinap'),
                    'rnd_btrkt'     => intval(str_replace('.', '', ($this->input->post('rnd_btrkt')))),
                    'rnd_bplg'      => intval(str_replace('.', '', ($this->input->post('rnd_bplg')))),
                    'rnd_sku'       => intval(str_replace('.', '', ($this->input->post('rnd_sku')))),
                    'rnd_jmlsaku'   => $this->input->post('rnd_jmlsaku'),
                    'rnd_ketsaku'   => $this->input->post('rnd_ketsaku'),
                    'rnd_ttype'     => $this->input->post('rnd_ttype')??'kereta',
                    'rnd_tmbhn'     => $this->input->post('rnd_tmbhn'),
                    'rnd_kettmbhn'  => $this->input->post('rnd_kettmbhn '),
                    'rnd_btmbhn'    => intval(str_replace('.', '', ($this->input->post('rnd_btmbhn')))),
                    'rnd_kettmbhn'  => $this->input->post('rnd_kettmbhn')??'0',
                );  
                $detail_rincian_id = $this->M_detailrincian->add_detail_rincian($param2);
                $data = [];
                $count = count($_FILES['files']['name']);
                for($i=0;$i<$count;$i++){
                    if(!empty($_FILES['files']['name'][$i])){
                        $_FILES['file']['name'] = $_FILES['files']['name'][$i];
                        $_FILES['file']['type'] = $_FILES['files']['type'][$i];
                        $_FILES['file']['tmp_name'] = $_FILES['files']['tmp_name'][$i];
                        $_FILES['file']['error'] = $_FILES['files']['error'][$i];
                        $_FILES['file']['size'] = $_FILES['files']['size'][$i];
                        $config['upload_path'] = 'upload/'; 
                        $config['allowed_types'] = 'pdf|gif|jpg|png';
                        $config['max_size'] = '5000'; // max_size in kb
                        $tmp = explode('.', $_FILES['files']['name'][$i]);
                        $file_ext = end($tmp);
                        $config['file_name'] = 'Permohonan'.$q->n.'_'.$detail_rincian_id.'_'.strtotime(date('Y-m-d H:i:s')).'.'.$file_ext;
                        $this->load->library('upload',$config); 
                        if($this->upload->do_upload('file')){
                            $uploadData = $this->upload->data();
                            $file_encode[$i]=$uploadData['file_name'];
                        }
                        $object = array(
                            'psl_id'=>$detail_rincian_id,
                            'psllmp_dok1'=>$file_encode[0]??NULL,
                            'psllmp_dok2'=>$file_encode[1]??NULL,
                            'psllmp_dok3'=>$file_encode[2]??NULL,
                            'psllmp_dok4'=>$file_encode[3]??NULL
                        );
                    }
                }
                return redirect('rincian/index');
            }else{            
                $data['judul']='Daftar Rincian';
                $data['_view'] = 'v_daftar_rincian/add';
                $data['_landing'] = false;
                $load = $this->loader->load($data);
                $this->load->view('layouts/content',$load);
            }
        }
    }  

    /*
     * Editing a daftar_rincian
     */
    function edit($rcn_id)
    { 
        if ($this->session->userdata('level')!='Kepala Sub Bagian Umum' && $this->session->userdata('level')!='Pejabat Lelang') {
           redirect('rincian');
        }else{
            $data['daftar_rincian'] = $this->M_daftarrincian->get_daftar_rincian($rcn_id);
            
            if(isset($data['daftar_rincian']['rcn_id']))
            {
                $this->load->library('form_validation');

                $nomor =  ($this->input->post('srtgs_no') !=  $data['daftar_rincian']['srtgs_no']) ? '|is_unique[tb_rcn.srtgs_no]' : '';         
                $nip = $this->session->userdata('nip');
                $this->form_validation->set_rules('srtgs_no','Ref. Surat tugas','required|callback_cek_surattugas'.$nomor);
                $this->rules();
                if($this->form_validation->run())     
                {   

                    $params = array(
                        'srtgs_no' => $this->input->post('srtgs_no'),
                        'pgw_nip' => $nip,
                        'rcn_tgl' => date('Y-m-d')
                    );
                    $daftar_rincian_id = $this->M_daftarrincian->update_daftar_rincian($rcn_id,$params);
                    $params = array(
                        'rnd_binap' => intval(str_replace('.', '', ($this->input->post('rnd_binap')))),
                        'rnd_jmlinap' => intval(str_replace('.', '', ($this->input->post('rnd_jmlinap')))),
                        'rnd_btrkt' => intval(str_replace('.', '', ($this->input->post('rnd_btrkt')))),
                        'rnd_bplg' => intval(str_replace('.', '', ($this->input->post('rnd_bplg')))),
                        'rnd_sku' => intval(str_replace('.', '', ($this->input->post('rnd_sku')))),
                        'rnd_ketlln' => ($this->input->post('rnd_ketlln')),
                        'rnd_lln' => intval(str_replace('.', '', ($this->input->post('rnd_lln')))),
                    );

                    $this->M_detailrincian->update_detail_rincian($rcn_id,$params);            
                    redirect('rincian/index');
                }
                else
                {
                    $data['judul']='Daftar Rincian';
                    $data['_view'] = 'v_daftar_rincian/edit';
                   $data['_landing'] = false;
                   $load = $this->loader->load($data);
                   $this->load->view('layouts/content',$load);
                }
            }else{
                redirect('rincian');
            }
        }
    } 

    /*
     * Deleting daftar_rincian
     */
    function remove()
    {
        $rcn_id = $this->input->post('id');
        if ($this->session->userdata('level')!='Kepala Sub Bagian Umum' && $this->session->userdata('level')!='Pejabat Lelang') {
           redirect('rincian');
        }else{

        $daftar_rincian = $this->M_daftarrincian->get_daftar_rincian($rcn_id);

        // check if the daftar_rincian exists before trying to delete it
        if(isset($daftar_rincian['rcn_id']))
        {
            $this->M_daftarrincian->delete_daftar_rincian($rcn_id);
            redirect('rincian/index');
        }
        else
            show_error('The daftar_rincian you are trying to delete does not exist.');
        }
    }

    function penyebut($nilai) {
        $nilai = abs($nilai);
        $huruf = array("", "Satu", "Dua", "Tiga", "Empat", "Lima", "Enam", "Tujuh", "Delapan", "Sembilan", "Sepuluh", "Sebelas");
        $temp = "";
        if ($nilai < 12) {
            $temp = " ". $huruf[$nilai];
        } else if ($nilai <20) {
            $temp = $this->penyebut($nilai - 10). " belas";
        } else if ($nilai < 100) {
            $temp = $this->penyebut($nilai/10)." puluh". $this->penyebut($nilai % 10);
        } else if ($nilai < 200) {
            $temp = " seratus" . $this->penyebut($nilai - 100);
        } else if ($nilai < 1000) {
            $temp = $this->penyebut($nilai/100) . " ratus" . $this->penyebut($nilai % 100);
        } else if ($nilai < 2000) {
            $temp = " seribu" . $this->penyebut($nilai - 1000);
        } else if ($nilai < 1000000) {
            $temp = $this->penyebut($nilai/1000) . " ribu" . $this->penyebut($nilai % 1000);
        } else if ($nilai < 1000000000) {
            $temp = $this->penyebut($nilai/1000000) . " juta" . $this->penyebut($nilai % 1000000);
        } else if ($nilai < 1000000000000) {
            $temp = $this->penyebut($nilai/1000000000) . " milyar" . $this->penyebut(fmod($nilai,1000000000));
        } else if ($nilai < 1000000000000000) {
            $temp = $this->penyebut($nilai/1000000000000) . " trilyun" . $this->penyebut(fmod($nilai,1000000000000));
        }     
        return $temp;
    }
            
    function terbilang($nilai) {
        if($nilai<0) {
            $hasil = "minus ". trim($this->penyebut($nilai)).' rupiah';
        } else {
            $hasil = trim($this->penyebut($nilai)).' rupiah';
        }     		
        return $hasil;
    }

    public function cetak($value='')
    {
        $this->load->model('M_pengikuttgs');
        $data['rincian'] = $this->M_daftarrincian->get_daftar_rincian($value);
        if (isset($data['rincian']['rcn_id'])) {
            $data['detail'] = $this->M_detailrincian->get_daftar_rincian_by_rcn($value);
            $data['total'] = ($data['detail']['rnd_binap'] * $data['detail']['rnd_jmlinap']) + ($data['detail']['rnd_btrkt'] + $data['detail']['rnd_btrkt']) + ($data['detail']['rnd_sku'] * $data['detail']['rnd_jmlsaku']??1) + $data['detail']['rnd_btmbhn']??0;
            $data['terbilang'] = $this->terbilang($data['total']);
            $data['pengikut']=$this->M_pengikuttgs->get_pengikut_tgs_by_no_join($data['rincian']['srtgs_no']);
            $data['st'] = $this->M_surattugas->get_surattugas_by_no($data['rincian']['srtgs_no']);
            $data['pdf'] = $this->load->library('PDFGenerator');
            //$this->pdfgenerator->set_paper(array(0,0,595,595),"portait");
            
            $data['nama_file']  = 'Rincian Biaya Perjalanan '.$this->loader->konversi_tanggal($data['rincian']['rcn_tgl']).' - '.$data['st']['srtgs_tmt'];
            $html = $this->load->view('template/cetak_rincian',$data, TRUE);
            $this->pdfgenerator->generate($html,$data['nama_file']);
        }else{
            redirect('rincian');
        }
        
    }
    
}
