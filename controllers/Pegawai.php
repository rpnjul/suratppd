<?php

require_once APPPATH.'views/vendor/autoload.php';

/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Pegawai extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('M_pegawai');
        $this->load->library('Loader');
        $uri = $this->uri->segment(1);
        $uri2 = $this->uri->segment(2);
        //var_dump($uri);
        if (!$this->session->has_userdata('status')) {
            // if ( $uri != 'register' & $uri != 'forgot' & $uri2 != 'lupa_sandi') {
            //     $data['_view'] = 'v_home/index';
            //     $data['_landing'] = true;
            //     $this->load->view('layouts/content',$data);
            // }
        }

       // error_reporting(0);
    } 

  



    function data(){
        $this->load->library('Datatables');
        $this->datatables->select('*');
        $this->datatables->from('tb_pgw');
        //$this->datatables->add_column('aksi', '<a href="edit/$1" class="edit_record btn btn-info btn-xs" data-id="$1">Ubah</a>','pgw_id,pgw_nip,pgw_nm,pgw_tll,pgw_tlh');
        return print_r($this->datatables->generate());
    }
    /*
     * Listing of pegawai
     */
    function index()
    {
        if (($this->session->userdata['status']=='login') & ($this->session->userdata['sts']==1)) {
            $params['limit'] = RECORDS_PER_PAGE;    
            $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
            $config = $this->config->item('pagination');
            $config['base_url'] = site_url('pegawai/index?');
            $config['total_rows'] = $this->M_pegawai->get_all_pegawai_count();
            $this->pagination->initialize($config);
            $data['pegawai'] = $this->M_pegawai->get_all_pegawai($params);        
            $data['_view'] = 'v_pegawai/index';
            $data['_landing'] = false;
            $data['judul'] = "Data pegawai";
            $load = $this->loader->load($data);
            $this->load->view('layouts/content',$load);
        } else {
            $this->daftar_kepala_kantor();
        }
    }

    public function cek_jab($cek_jab){
        $cek = $this->M_pegawai->search_pegawai($cek_jab);
        if (isset($cek)) {
            foreach ($cek as $key) {
                //var_dump($key->pgw_jab);
                if($key->pgw_jab == 'Kepala Kantor'||$key->pgw_jab == 'Kepala Sub Bagian Umum' )
                {
                   $this->form_validation->set_message('cek_jab', 'Jabatan yang dipilih telah tersedia');
                   return FALSE;
                }else{
                    return TRUE;
                } 
            }
        }else{
            return TRUE;
        }
    }

    function rules(){
        $this->form_validation->set_message('max_length', '{field} tidak dapat lebih dari {param} karakter.');
        $this->form_validation->set_message('min_length', '{field} tidak dapat kurang dari {param} karakter.');
        $this->form_validation->set_message('required', 'Memerlukan {field}.');
        $this->form_validation->set_message('valid_email', '{field} tidak valid.');
        $this->form_validation->set_message('matches', '{field} tidak serupa.');
        $this->form_validation->set_message('is_unique', '{field} telah digunakan.');
    }
    /*
     * Adding a new pegawai
     */
    function add()
    {    
        if ($this->session->has_userdata('status')&& ($this->session->userdata('level')=='Admin' || $this->session->userdata('level')=='Kepala Kantor')) {
        $this->load->library('form_validation');
		$this->form_validation->set_rules('pgw_nip', 'NIP', 'required|trim|is_unique[tb_pgw.pgw_nip]|max_length[25]');
        $this->form_validation->set_rules('pgw_nm','Nama Lengkap','required|max_length[45]');
		$this->form_validation->set_rules('pgw_jnk','Jenis Kelamin','required');
		$this->form_validation->set_rules('pgw_tlp','Nomor Telepon','required|trim|min_length[10]|max_length[18]');
        $this->form_validation->set_rules('pgw_tlh','Tempat Lahir','required|max_length[25]');
		$this->form_validation->set_rules('pgw_tll','Tanggal Lahir','required');
		$this->form_validation->set_rules('pgw_gpt','Pankgat & Golongan','required|max_length[26]');
		$this->form_validation->set_rules('pgw_jab','Jabatan Pegawai','callback_cek_jab');
		$this->form_validation->set_rules('pgw_snd','Kata sandi','required|max_length[30]');
        $this->form_validation->set_rules('pgw_eml','Email','required|max_length[30]|is_unique[tb_pgw.pgw_eml]');
		$this->rules();
        $sts = ($this->session->userdata('level')=='Admin'?0:1);
		if($this->form_validation->run())     
        {   
            $tgl = strtotime($this->input->post('pgw_tll'));
            $tgl = date('Y-m-d',$tgl);
            $params = array(
				'pgw_nip' => trim($this->input->post('pgw_nip')),
                'pgw_jnk' => $this->input->post('pgw_jnk'),
				'pgw_gpt' => $this->input->post('pgw_gpt'),
				'pgw_nm' => $this->input->post('pgw_nm'),
				'pgw_tlh' => $this->input->post('pgw_tlh'),
                'pgw_tlp' => trim($this->input->post('pgw_tlp')),
				'pgw_tll' => $tgl,
				'pgw_jab' => $this->input->post('pgw_jab'),
                'pgw_eml' => $this->input->post('pgw_eml'),
                'pgw_snd' => $this->input->post('pgw_snd'),
				'pgw_sts' => $sts
            );
            
            $pegawai_id = $this->M_pegawai->add_pegawai($params);
            redirect('pegawai/index');
        }
        else
        {            
            $data['_view'] = 'v_pegawai/add';
            $data['_landing'] = false;
            $data['judul'] = "Data pegawai";
            $load = $this->loader->load($data);
            $this->load->view('layouts/content',$load);
        }
        }else{
            redirect('login');
        }
    }  

    function cetak(){
        if ($this->session->has_userdata('status')) {
            $data['logo'] = site_url('resources/img/logo.png');
            $data['judul'] = "DATA PEGAWAI";
            $data['pegawai'] = $this->M_pegawai->get_all_pegawai_result();
            $this->loader->cetak('L',$data);
        }else{
            redirect('login');
        }
    }

    function get_autocomplete(){
        if (isset($_GET['term'])) {
            $result = $this->M_pegawai->search_pegawai_pejabat_lelang($_GET['term']);
            if (count($result) > 0) {
                foreach ($result as $row)
                    $arr_result[] = array(
                            'label'         => $row->pgw_nip,
                            'description'   => $row->pgw_nm,
                    );
                    echo json_encode($arr_result);
            }
        }
    }

    function get_autocomplete_bak(){
        if (isset($_GET['term'])) {
            $result = $this->M_pegawai->search_pegawai_bak($_GET['term']);
            if (count($result) > 0) {
                foreach ($result as $row)
                $arr_result[] = array(
                        'label'         => $row->pgw_nip,
                        'description'   => $row->pgw_nm,
                );
                echo json_encode($arr_result);
            }
        }
    }

    /*
     * Editing a pegawai
     */
    function edit($pgw_id)
    {   
        if ($this->session->has_userdata('status')&& ($this->session->userdata('level')=='Admin' || $this->session->userdata('level')=='Kepala Kantor')) {
            // check if Data pegawai exists before trying to edit it
            $level = $this->session->userdata('level'); 
            $data['pegawai'] = $this->M_pegawai->get_pegawai($pgw_id);
            if (isset($data['pegawai']['pgw_id']) & $data['pegawai']['pgw_jab']!='Kepala Kantor' & $data['pegawai']['pgw_jab']!='Kepala Sub Bagian Umum' & ($level =='Kepala Kantor' || $level =='Admin' ) ) {
                if ($level =='Admin') {
                    if ($data['pegawai']['pgw_jab']!=='Kepala Kantor' && $data['pegawai']['pgw_jab']!=='Kepala Sub Bagian Umum' && $data['pegawai']['pgw_jab']!='Admin' ) {
                        if( $data['pegawai']['pgw_jab']!=$this->session->userdata('level') ){
                            $this->load->library('form_validation');
                            $nip =  ($this->input->post('pgw_nip') !=  $data['pegawai']['pgw_nip']) ? '|is_unique[tb_pgw.pgw_nip]' : '';
                            $eml =  ($this->input->post('pgw_eml') !=  $data['pegawai']['pgw_eml']) ? '|is_unique[tb_pgw.pgw_eml]' : '';
                            $jab =  ($this->input->post('pgw_jab') !=  $data['pegawai']['pgw_jab']) ? '|callback_cek_jab' : '';
                            $this->form_validation->set_rules('pgw_nip','NIP','required|max_length[25]'.$nip);
                            $this->form_validation->set_rules('pgw_nm','Nama Lengkap','required|max_length[45]');
                            $this->form_validation->set_rules('pgw_tlh','Tempat Lahir','required|max_length[25]');
                            $this->form_validation->set_rules('pgw_snd','Kata sandi','required|max_length[30]');
                            $this->form_validation->set_rules('pgw_tlp','Nomor Telepon','required|trim|max_length[18]');
                            $this->form_validation->set_rules('pgw_tll','Tanggal Lahir','required');
                            $this->form_validation->set_rules('pgw_jab','Jabatan pegawai','required'.$jab);
                            $this->form_validation->set_rules('pgw_eml','Email pegawai','required|valid_email|max_length[30]'.$eml);
                            $this->rules();
                            if($this->form_validation->run())     
                            {   
                                $tgl = strtotime($this->input->post('pgw_tll'));
                                $tgl = date('Y-m-d',$tgl);
                                $params = array(
                                    'pgw_nip' => trim($this->input->post('pgw_nip')),
                                    'pgw_jnk' => $this->input->post('pgw_jnk'),
                                    'pgw_gpt' => $this->input->post('pgw_gpt'),
                                    'pgw_nm' => $this->input->post('pgw_nm'),
                                    'pgw_tlh' => $this->input->post('pgw_tlh'),
                                    'pgw_tlp' => trim($this->input->post('pgw_tlp')),
                                    'pgw_tll' => $tgl,
                                    'pgw_jab' => $this->input->post('pgw_jab'),
                                    'pgw_eml' => $this->input->post('pgw_eml'),
                                    'pgw_snd' => $this->input->post('pgw_snd')
                            );
                                $this->M_pegawai->update_pegawai($pgw_id,$params);    
                                redirect('pegawai/index');
                            }else{
                                $data['_view'] = 'v_pegawai/edit';
                                $data['_landing'] = false;
                                $data['judul'] = "Data pegawai";
                                $load = $this->loader->load($data);
                                $this->load->view('layouts/content',$load);
                            }
                        }
                        else
                            show_error('Tidak memiliki akses ini.');
                    }else{
                        show_error('Tidak memiliki akses ini.');
                    }
                }else{
                    if( $data['pegawai']['pgw_jab']!=$this->session->userdata('level') ){
                        $this->load->library('form_validation');
                        $nip =  ($this->input->post('pgw_nip') !=  $data['pegawai']['pgw_nip']) ? '|is_unique[tb_pgw.pgw_nip]' : '';
                        $eml =  ($this->input->post('pgw_eml') !=  $data['pegawai']['pgw_eml']) ? '|is_unique[tb_pgw.pgw_eml]' : '';
                        $jab =  ($this->input->post('pgw_jab') !=  $data['pegawai']['pgw_jab']) ? '|callback_cek_jab' : '';
                        $this->form_validation->set_rules('pgw_nip','NIP','required|max_length[25]'.$nip);
                        $this->form_validation->set_rules('pgw_nm','Nama Lengkap','required|max_length[45]');
                        $this->form_validation->set_rules('pgw_tlh','Tempat Lahir','required|max_length[25]');
                        $this->form_validation->set_rules('pgw_snd','Kata sandi','required|max_length[30]');
                        $this->form_validation->set_rules('pgw_tlp','Nomor Telepon','required|trim|max_length[18]');
                        $this->form_validation->set_rules('pgw_tll','Tanggal Lahir','required');
                        $this->form_validation->set_rules('pgw_jab','Jabatan pegawai','required'.$jab);
                        $this->form_validation->set_rules('pgw_eml','Email pegawai','required|valid_email|max_length[30]'.$eml);
                        $this->rules();
                        if($this->form_validation->run())     
                        {   
                            $tgl = strtotime($this->input->post('pgw_tll'));
                            $tgl = date('Y-m-d',$tgl);
                            $params = array(
                                'pgw_nip' => trim($this->input->post('pgw_nip')),
                                'pgw_jnk' => $this->input->post('pgw_jnk'),
                                'pgw_gpt' => $this->input->post('pgw_gpt'),
                                'pgw_nm' => $this->input->post('pgw_nm'),
                                'pgw_tlh' => $this->input->post('pgw_tlh'),
                                'pgw_tlp' => trim($this->input->post('pgw_tlp')),
                                'pgw_tll' => $tgl,
                                'pgw_jab' => $this->input->post('pgw_jab'),
                                'pgw_eml' => $this->input->post('pgw_eml'),
                                'pgw_snd' => $this->input->post('pgw_snd')
                        );
                            $this->M_pegawai->update_pegawai($pgw_id,$params);    
                            redirect('pegawai/index');
                        }else{
                            $data['_view'] = 'v_pegawai/edit';
                            $data['_landing'] = false;
                            $data['judul'] = "Data pegawai";
                            $load = $this->loader->load($data);
                            $this->load->view('layouts/content',$load);
                        }
                    }
                    else
                        show_error('Tidak memiliki akses ini.');
                }
                
            }else{
                redirect('pegawai/index');
            }
        }else{
            redirect('pegawai/index');
        }
    }


 function profile()
    {   
        if ($this->session->has_userdata('id_login')) {
            $id = $this->session->userdata('id_login'); 
            $data['pegawai'] = $this->M_pegawai->get_pegawai($id);
            
            if(!empty($data['pegawai']))
            {
                $this->load->library('form_validation');
                $nip =  ($this->input->post('pgw_nip') !=  $data['pegawai']['pgw_nip']) ? '|is_unique[tb_pgw.pgw_nip]' : '';
                $eml =  ($this->input->post('pgw_eml') !=  $data['pegawai']['pgw_eml']) ? '|is_unique[tb_pgw.pgw_eml]' : '';
                //$jab =  ($this->input->post('pgw_jab') !=  $data['pegawai']['pgw_jab']) ? '|callback_cek_jab' : '';
                $this->form_validation->set_rules('pgw_nip','NIP','required|max_length[25]'.$nip);
                $this->form_validation->set_rules('pgw_nm','Nama Lengkap','required|max_length[45]');
                $this->form_validation->set_rules('pgw_tlh','Tempat Lahir','required|max_length[25]');
		        $this->form_validation->set_rules('pgw_snd','Kata sandi','required|max_length[30]');
                $this->form_validation->set_rules('pgw_tlp','Nomor Telepon','required|trim|max_length[18]');
                $this->form_validation->set_rules('pgw_tll','Tanggal Lahir','required');
                //$this->form_validation->set_rules('pgw_jab','Jabatan pegawai','required'.$jab);
                $this->form_validation->set_rules('pgw_eml','Email pegawai','required|valid_email|max_length[30]'.$eml);
                $this->rules();
                if($this->form_validation->run())     
                {   
                    $tgl = strtotime($this->input->post('pgw_tll'));
                    $tgl = date('Y-m-d',$tgl);
                    $params = array(
                        'pgw_nip' => trim($this->input->post('pgw_nip')),
                        'pgw_jnk' => $this->input->post('pgw_jnk'),
                        'pgw_gpt' => $this->input->post('pgw_gpt'),
                        'pgw_nm' => $this->input->post('pgw_nm'),
                        'pgw_tlh' => $this->input->post('pgw_tlh'),
                        'pgw_tlp' => trim($this->input->post('pgw_tlp')),
                        'pgw_tll' => $tgl,
                        'pgw_eml' => $this->input->post('pgw_eml'),
                        'pgw_snd' => $this->input->post('pgw_snd')
                );
                    $update = $this->M_pegawai->update_pegawai($pgw_id,$params);  
					if($update){
						 $login = array(
                        'id_login' => $data['pegawai']['pgw_id'],
                        'nip' => $this->input->post('pgw_nip'),
                        'nama' => $this->input->post('pgw_nm'),
                        'email' => $this->input->post('pgw_eml'),
                        'level' => $data['pegawai']['pgw_jab'],
						'sts' => 1,
                        'status' => "login"
                        );
	                    $this->session->set_userdata($login);
					}  
                    redirect('pegawai/index');
                }
                 else
                {
                    $data['_view'] = 'v_pegawai/profile';
                    $data['_landing'] = false;
                    $data['judul'] = "Profil pegawai";
                    $load = $this->loader->load($data);
                    $this->load->view('layouts/content',$load);
                }
            }
            else
              //  redirect('pegawai');
                echo "OK";
        }else{
            redirect('pegawai/index');
        }
    }

    function form(){
        $this->load->view('v_pegawai/form');
    }


    function info($pgw_id)
    {   
        if ($this->session->has_userdata('status')) {
            // check if Data pegawai exists before trying to edit it
            $data['pegawai'] = $this->M_pegawai->get_pegawai($pgw_id);
            
            if(isset($data['pegawai']['pgw_id']))
            {
                $data['_view'] = 'v_pegawai/view';
                $data['_landing'] = false;
                $data['judul'] = "Data pegawai";
                $data['level'] = $this->session->userdata('level');
                $load = $this->loader->load($data);
                $this->load->view('layouts/content',$load);
               //var_dump($data['level']);
                
            }
            else
                show_error('Data pegawai tidak ditemukan.');
        }else{
            redirect('login');
        }
    }
    /*
     * Deleting pegawai
     */
    public function nonactive()
    {
        $pgw_id = $this->input->post('id');
       if ($this->session->has_userdata('status')&& ($this->session->userdata('level')=='Admin' || $this->session->userdata('level')=='Kepala Kantor')) {
           $pegawai = $this->M_pegawai->get_pegawai($pgw_id);

           // check if Data pegawai exists before trying to delete it
           if(isset($pegawai['pgw_id']))
           {
			if ($pegawai['pgw_jab']!='Kepala Kantor' && $pegawai['pgw_jab']!='Kepala Sub Bagian Umum') {
					$params = array(
                        'pgw_sts' => 0
					);
                    $this->M_pegawai->update_pegawai($pgw_id,$params);
                    redirect('pegawai/index');
                }else{
                    show_error('Tidak dapat di non-aktifkan');
                }
           }else{
               show_error('Data pegawai yang dinonaktifkan tidak ditemukan.');
           }
       }else{
            redirect('pegawai');
       }
    }

  public function active()
    {
       $pgw_id = $this->input->post('id');
       if ($this->session->has_userdata('status') & ($this->session->userdata('level')=='Admin' || $this->session->userdata('level')=='Kepala Kantor')) {
           $pegawai = $this->M_pegawai->get_pegawai($pgw_id);

           if(isset($pegawai['pgw_id']))
           {
			if ($pegawai['pgw_jab']!='Kepala Kantor' && $pegawai['pgw_jab']!='Kepala Sub Bagian Umum') {
					$params = array(
                        'pgw_sts' => 1
					);
                    $this->M_pegawai->update_pegawai($pgw_id,$params);
                    redirect('pegawai/index');
                }else{
                    show_error('Tidak dapat mengaktifan pegawai');
                }
           }
           else{
               show_error('Data pegawai yang diaktifkan tidak ditemukan.');
           }
       }else{
            redirect('pegawai');
       }
    }


      function daftar_admin()
    {   
        if ($this->M_pegawai->cek_admin()<1) {
            $this->load->library('form_validation');
            $this->form_validation->set_rules('pgw_nip', 'NIP', 'required|is_unique[tb_pgw.pgw_nip]|max_length[25]');
            $this->form_validation->set_rules('pgw_nm','Nama Lengkap','required|max_length[45]');
            $this->form_validation->set_rules('pgw_jnk','Jenis Kelamin','required');
            $this->form_validation->set_rules('pgw_tlh','Tempat Lahir','required|max_length[25]');
            $this->form_validation->set_rules('pgw_tlp','Nomor Telepon','required|trim|max_length[18]');
            $this->form_validation->set_rules('pgw_tll','Tanggal Lahir','required');
            $this->form_validation->set_rules('pgw_gpt','Pangkat & Gol.','required|max_length[26]');
            $this->form_validation->set_rules('pgw_snd','Kata sandi','required|max_length[30]');
            $this->form_validation->set_rules('pgw_konsnd','Konfirmasi Kata sandi','required|matches[pgw_snd]|max_length[30]');
            $this->form_validation->set_rules('pgw_eml','Email','required|valid_email|max_length[30]|is_unique[tb_pgw.pgw_eml]');
            $this->rules();
            if($this->form_validation->run())     
            {   
                $tgl = strtotime($this->input->post('pgw_tll'));
                $tgl = date('Y-m-d',$tgl);
                $params = array(
                    'pgw_nip' => $this->input->post('pgw_nip'),
                    'pgw_jnk' => $this->input->post('pgw_jnk'),
                    'pgw_gpt' => $this->input->post('pgw_gpt'),
                    'pgw_nm' => $this->input->post('pgw_nm'),
                    'pgw_tlh' => $this->input->post('pgw_tlh'),
                    'pgw_tlp' => trim($this->input->post('pgw_tlp')),
                    'pgw_tll' => $tgl,
                    'pgw_jab' => 'Admin',
                    'pgw_eml' => $this->input->post('pgw_eml'),
                    'pgw_snd' => $this->input->post('pgw_snd')
                );
                
                $pegawai_id = $this->M_pegawai->add_pegawai($params);
                redirect('login');
            }
            else
            {            
                $data['_view'] = 'v_home/v_register';
                $data['_landing'] = true;
                $data['judul'] = "Data pegawai";
                //$load = $this->loader->load($data);
                $this->load->view('layouts/main',$data);
            }
        }else{
            redirect('login');
        }
    }  


      function daftar_kepala_kantor()
    {   
        if ($this->M_pegawai->cek_kepala()<1) {
            $this->load->library('form_validation');
            $this->form_validation->set_rules('pgw_nip', 'NIP', 'required|is_unique[tb_pgw.pgw_nip]|max_length[25]');
            $this->form_validation->set_rules('pgw_nm','Nama Lengkap','required|max_length[45]');
            $this->form_validation->set_rules('pgw_jnk','Jenis Kelamin','required');
            $this->form_validation->set_rules('pgw_tlh','Tempat Lahir','required|max_length[25]');
            $this->form_validation->set_rules('pgw_tlp','Nomor Telepon','required|trim|max_length[18]');
            $this->form_validation->set_rules('pgw_tll','Tanggal Lahir','required');
            $this->form_validation->set_rules('pgw_gpt','Pangkat & Gol.','required|max_length[26]');
            $this->form_validation->set_rules('pgw_snd','Kata sandi','required|max_length[30]');
            $this->form_validation->set_rules('pgw_konsnd','Konfirmasi Kata sandi','required|matches[pgw_snd]|max_length[30]');
            $this->form_validation->set_rules('pgw_eml','Email','required|valid_email|max_length[30]|is_unique[tb_pgw.pgw_eml]');
            $this->rules();
            if($this->form_validation->run())     
            {   
                $tgl = strtotime($this->input->post('pgw_tll'));
                $tgl = date('Y-m-d',$tgl);
                $params = array(
                    'pgw_nip' => $this->input->post('pgw_nip'),
                    'pgw_jnk' => $this->input->post('pgw_jnk'),
                    'pgw_gpt' => $this->input->post('pgw_gpt'),
                    'pgw_nm' => $this->input->post('pgw_nm'),
                    'pgw_tlh' => $this->input->post('pgw_tlh'),
                    'pgw_tlp' => trim($this->input->post('pgw_tlp')),
                    'pgw_tll' => $tgl,
                    'pgw_jab' => 'Kepala Kantor',
                    'pgw_eml' => $this->input->post('pgw_eml'),
                    'pgw_snd' => $this->input->post('pgw_snd')
                );
                
                $pegawai_id = $this->M_pegawai->add_pegawai($params);
                redirect('login');
            }
            else
            {            
                $data['_view'] = 'v_home/v_register';
                $data['_landing'] = true;
                $data['judul'] = "Daftar Kepala Kantor";
                //$load = $this->loader->load($data);
                $this->load->view('layouts/main',$data);
            }
        }else{
            redirect('login');
        }
    }  

    public function login()
    {
        // $code = ['status' => 400, 'desc' => Bad Method Gateway];
        // return json_encode($code);
        if ($this->session->has_userdata('status')) {
			if($this->session->userdata('sts')==0){
				echo '<script>alert("Tidak dapat mengkases dengan status non aktif");</script>';	
                $this->session->sess_destroy();
                $response = ['code' => 401, 'desc' => 'Akun anda berstatus non aktif, Silahkan hubungi bagian IT', 'class'=>'-danger'];
			}else{
            	redirect('dash');
			}
        }else{
            if ($this->M_pegawai->cek_kepala()>0) {
                $this->load->library('form_validation');
                $this->form_validation->set_rules('u_email','Email atau NIP','required');
                $this->form_validation->set_rules('u_password','Password','required');
                if ($this->form_validation->run()) {
                    $email = $this->input->post('u_email');
                    $password = $this->input->post('u_password');
                    $data['user'] = $this->M_pegawai->get_login($email,$password);
                    if (isset($data['user']['pgw_id'])) {
                        $data['pegawai'] = $this->M_pegawai->get_pegawai_by_nip($data['user']['pgw_nip']);
                        $login = array(
                            'id_login' => $data['user']['pgw_id'],
                            'nip' => $data['user']['pgw_nip'],
                            'nama' => $data['user']['pgw_nm'],
                            'email' => $data['user']['pgw_eml'],
                            'level' => $data['user']['pgw_jab'],
                            'sts' => $data['pegawai']['pgw_sts'],
                            'status' => "login"
                            );
                        $this->session->set_userdata($login);
                        $response = ['code'=>200 ,'desc'=>'Berhasil! Anda Akan Dialihkan Ke Dashboard', 'class'=>'-success'];
                        // $this->login();
                        }else{
                            $response = ['code'=>202 ,'desc'=>'Email/NIP atau Kata sandi salah!','class'=>'-danger'];
                        }
                }else{
                    $data['_view'] = 'v_home/index';
                    $data['_landing'] = true;
                    return $this->load->view('layouts/content',$data);
                    
                }    
            }else{
                redirect('register/head-office','refresh');
            }
        }
        return $this->output->set_content_type('application/json')
                            ->set_status_header(200)
                            ->set_output(json_encode($response));
       
    }

    function logout(){
        $this->session->sess_destroy();
        redirect('login');
        /*$data['_view'] = 'v_home/index';
        $data['_landing'] = true;
        $this->load->view('layouts/main',$data);*/
    }

    function lupa_sandi()
    {
        if ($this->session->has_userdata('status')) {
            redirect('dash');
        }else{
            $this->load->library('form_validation');
            $this->form_validation->set_rules('u_nip','NIP','required');
            $this->form_validation->set_rules('u_email','Email','required');
            if ($this->form_validation->run()) {
                $pgw_nip = $this->input->post('u_nip');
                $pgw_eml = $this->input->post('u_email');
                $data['pegawai'] = $this->M_pegawai->is_pegawai($pgw_nip,$pgw_eml);
                if (isset($data['pegawai']['pgw_snd'])) {
                 $pesan =  'NIP : '.$data['pegawai']['pgw_nip'].'<br>'.'Email : '.$data['pegawai']['pgw_eml'].'<br>'.'Kata sandi : '.$data['pegawai']['pgw_snd'];
                    $kirim = array(
                        'pengirim'=>'KPKNL SPPD',
                        'penerima'=>$data['pegawai']['pgw_eml'],
                        'pesan'=>$pesan,
                        'judul'=>'Lupa kata sandi pegawai',
                    );
                    $this->kirim_email($kirim);
                    echo '<script>alert("Ditemukan ! periksa kontak masuk pada alamat email '.$data['pegawai']['pgw_eml'].' untuk melihat data.")</script>';
                    echo 'Ditemukan ! periksa kontak masuk pada alamat email '.$data['pegawai']['pgw_eml'].' untuk melihat data.';
                    sleep(2);
                    redirect('login','refresh');
                }else{
                     echo '<script>alert("Email tidak valid.")</script>';
              	 redirect('forgot');
                }
             }else{
                 $data['_view'] = 'v_home/v_lupa';
                 $data['_landing'] = true;
                 $this->load->view('layouts/main',$data);
             }   
        }
    }

    public function kirim_email($konten='')
    {
        $config = $this->loader->config_email();
        $this->load->library('email', $config);
        $this->email->from($config['smtp_user'],   $konten['pengirim']);
        // Email penerima
        $this->email->to($konten['penerima']); // Ganti dengan email tujuan

        // Lampiran email, isi dengan url/path file
        if (isset($konten['lampiran'])) {
            $this->email->attach($konten['lampiran']);
        }

        // Subject email
        $this->email->subject($konten['judul']);

        // Isi email
        $this->email->message($konten['pesan']);

        $status = $this->email->send();
        if ($status) {
            echo '<script>alert(Sukses! Mohon periksa kontak masuk pada alamat email '.$konten['penerima'].');</script>';
            //redirect('login');
        } else {
            echo '<script>alert(Email tidak dapat dikirim.)</script>';
        }
    }

    
}
